[{"/Users/ilya/Dev/Development/React/tech-service/src/index.js":"1","/Users/ilya/Dev/Development/React/tech-service/src/reportWebVitals.js":"2","/Users/ilya/Dev/Development/React/tech-service/src/App.js":"3","/Users/ilya/Dev/Development/React/tech-service/src/Sidebar.js":"4","/Users/ilya/Dev/Development/React/tech-service/src/WaitingRoom.js":"5","/Users/ilya/Dev/Development/React/tech-service/src/Agree.js":"6","/Users/ilya/Dev/Development/React/tech-service/src/SelectorRoom.js":"7","/Users/ilya/Dev/Development/React/tech-service/src/Story.js":"8","/Users/ilya/Dev/Development/React/tech-service/src/imagesStore.js":"9","/Users/ilya/Dev/Development/React/tech-service/src/Finish.js":"10","/Users/ilya/Dev/Development/React/tech-service/src/About.js":"11","/Users/ilya/Dev/Development/React/tech-service/src/circular_wait.js":"12"},{"size":177,"mtime":1607376555693,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607364819440,"results":"15","hashOfConfig":"16"},{"size":2141,"mtime":1607642772976,"results":"17","hashOfConfig":"14"},{"size":256,"mtime":1607630589824,"results":"18","hashOfConfig":"14"},{"size":2189,"mtime":1607801378636,"results":"19","hashOfConfig":"14"},{"size":1149,"mtime":1607781609018,"results":"20","hashOfConfig":"14"},{"size":13839,"mtime":1607790561786,"results":"21","hashOfConfig":"14"},{"size":967,"mtime":1607781660648,"results":"22","hashOfConfig":"14"},{"size":12011,"mtime":1607608324408,"results":"23","hashOfConfig":"14"},{"size":3323,"mtime":1607790143276,"results":"24","hashOfConfig":"14"},{"size":616,"mtime":1607633508513,"results":"25","hashOfConfig":"14"},{"size":1802,"mtime":1607774057571,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"4snc2p",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pcyozl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},"/Users/ilya/Dev/Development/React/tech-service/src/index.js",[],["57","58"],"/Users/ilya/Dev/Development/React/tech-service/src/reportWebVitals.js",[],["59","60"],"/Users/ilya/Dev/Development/React/tech-service/src/App.js",["61","62","63"],"import React from 'react';\nimport Sidebar from './Sidebar';\nimport WaitingRoom from './WaitingRoom'\nimport './App.css';\nimport { createBrowserHistory } from \"history\";\nimport SelectorRoom from './SelectorRoom';\nimport Agree from './Agree';\nimport Story from './Story';\nimport Finish from './Finish'\nimport About from './About'\nimport { withRouter, Switch } from \"react-router\";\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nconst browserHistory = createBrowserHistory();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() { \n    return (\n      <div className=\"App\" id=\"outer-container\">\n        <HashRouter history={browserHistory} >\n          <Sidebar pageWrapId={'page-wrap'} outerContainerId={'outer-container'} history = {browserHistory}/>\n          <Route render = {({ location }) => (\n              <Switch location = { location }>\n                  <Route exact path=\"/r/\" component={() => <Agree history = {browserHistory} isRegular={true}/>} />\n                  <Route path=\"/r/story\" component={() => <Story history = {browserHistory} isRegular={true}/>} />\n                  <Route path=\"/r/wait_room\" component={() => <WaitingRoom  history = {browserHistory} isRegular={true}/>} />\n                  <Route path=\"/r/selector\" component={() => <SelectorRoom isRegular={true}/>} />\n                  <Route exact path=\"/v/\" component={() => <Agree history = {browserHistory} isRegular={false}/>} />\n                  <Route path=\"/v/story\" component={() => <Story history = {browserHistory}/>} isRegular={false}/>\n                  <Route path=\"/v/wait_room\" component={() => <WaitingRoom  history = {browserHistory}/>} isRegular={false}/>\n                  <Route path=\"/v/selector\" component={() => <SelectorRoom history = {browserHistory} isRegular={false}/>} />\n                  <Route path=\"/complete_purchase\" component={() => <Finish locationData = {location} isRegular={false}/>} />\n                  <Route path=\"/about\" component={() => <About/>} />\n                </Switch>\n          )} />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","/Users/ilya/Dev/Development/React/tech-service/src/Sidebar.js",["64"],"import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport './Sidebar.css';\n\nexport default props => {\n  return (\n    <Menu>\n      <a className=\"menu-item\" href=\"/tech-service/#/about\">\n        About\n      </a>\n    </Menu>\n  );\n};","/Users/ilya/Dev/Development/React/tech-service/src/WaitingRoom.js",["65","66","67"],"/Users/ilya/Dev/Development/React/tech-service/src/Agree.js",[],"/Users/ilya/Dev/Development/React/tech-service/src/SelectorRoom.js",["68","69"],"import React from 'react';\nimport Gallery from 'react-grid-gallery';\nimport './SelectorRoom.css';\nimport {getImages} from './imagesStore'\nimport { withRouter } from 'react-router-dom';\nimport CircProgress from './circular_wait';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n    },\n  });\n\n\n\nfunction tileViewportStyleFn() { \n    return ({\n            width: '175px',\n            height: '220px',\n            backgroundColor: 'white'\n        });\n}\n\nfunction thumbnailStyleFn() { \n    var imgSrc = this.props.item.src;\n    if (!imgSrc.includes('VIP')) {\n        return ({\n                width: '175px',\n                height: '220px',\n                backgroundColor: 'white'\n            });\n    } \n    else {\n        return ({\n            width: '175px',\n            height: '220px',\n            backgroundColor: 'white',\n            border: '8px solid transparent',\n            borderImage: 'linear-gradient(to bottom, gold, rgba(0, 0, 0, 0)) 1 100%'\n        });\n    }\n}\n\n\nclass SelectorRoom extends React.Component{\n    constructor (props) {\n        var defImages = getImages();\n        const initImages1 = (defImages[0].regularImages.map(item => \n                                        {\n                                            item.isSelected = false;\n                                            return item\n                                        })).slice(0,2)\n        const initImages2 = (defImages[1].regularImages.map(item => \n                                        {\n                                        item.isSelected = false;\n                                        return item\n                                        })).slice(0,2)\n        const initImages3 = (defImages[2].regularImages.map(item => \n                                        {\n                                        item.isSelected = false;\n                                        return item\n                                        })).slice(0,2)\n        super(props)\n        this.state = {\n            showMore: false,\n            images: defImages,\n            itemNumber: 0,\n            numOfRegularItems: [2,2,2],\n            numOfVipItems: [0,0,0],\n            selectedItems: [null,null,null],\n            selectedItemsPrices: [0.0,0.0,0.0],\n            budget: 3000.0,\n            totalPrice: 0.0,\n            isScroll: false,\n            displyedItemImages: [initImages1, initImages2, initImages3],\n            isRegular: this.props.isRegular,\n            totalTime: 0,\n            value: 0,\n            clickedRegularViewMore: [0,0,0],\n            clickedVipViewMore: [0,0,0]\n        }\n    }\n\n\n    handleRegularViewMoreClick() {\n        var newImages = [Array.from(this.state.displyedItemImages[0]), Array.from(this.state.displyedItemImages[1]), Array.from(this.state.displyedItemImages[2])];\n        let updatePicNumArr = this.state.numOfRegularItems;\n        if (this.state.numOfRegularItems[this.state.itemNumber] !== this.state.images[this.state.itemNumber].regularImages.length)\n        {\n            var newClick = Array.from(this.state.clickedRegularViewMore);\n            newClick[this.state.itemNumber] = newClick[this.state.itemNumber] + 1;\n            updatePicNumArr[this.state.itemNumber] = this.state.numOfRegularItems[this.state.itemNumber]+1;\n            newImages[this.state.itemNumber].push(this.state.images[this.state.itemNumber].regularImages[updatePicNumArr[this.state.itemNumber]-1]);\n            this.setState({displyedItemImages: newImages, numOfRegularItems: updatePicNumArr, isScroll: true, clickedRegularViewMore: newClick})\n        }\n        else {\n            //nothing to add more\n        }\n    }\n\n    handleVipViewMoreClick() {\n        var newImages = [Array.from(this.state.displyedItemImages[0]), Array.from(this.state.displyedItemImages[1]), Array.from(this.state.displyedItemImages[2])];\n        let updatePicNumArr = this.state.numOfVipItems;\n        if (this.state.numOfVipItems[this.state.itemNumber] !== this.state.images[this.state.itemNumber].vipImages.length)\n        {\n            var newClick = Array.from(this.state.clickedVipViewMore);\n            newClick[this.state.itemNumber] = newClick[this.state.itemNumber] + 1;\n            updatePicNumArr[this.state.itemNumber] = this.state.numOfVipItems[this.state.itemNumber]+1;\n            newImages[this.state.itemNumber].push(this.state.images[this.state.itemNumber].vipImages[updatePicNumArr[this.state.itemNumber]-1]);\n            this.setState({displyedItemImages: newImages, numOfVipItems: updatePicNumArr, isScroll: true, clickedVipViewMore: newClick})\n        }\n        else {\n            //nothing to add more\n        }\n    }\n\n    handleNextClick() {\n        this.setState({itemNumber: this.state.itemNumber+1, isScroll: false})\n      }\n\n    handlePrevClick() {\n        this.setState({itemNumber: this.state.itemNumber-1, isScroll: false})\n    }\n\n    isAllItemsSelected() {\n        var itemsArray = this.state.selectedItems;\n        if (itemsArray[0] !== null && itemsArray[1] !== null && itemsArray[2] !== null && this.state.itemNumber === 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n\n    onSelectImage (index, image) {\n        var currentItem = this.state.itemNumber;\n        var displayedImages = this.state.displyedItemImages.slice();\n        var sSelectedItems = this.state.selectedItems;\n        var img = displayedImages[currentItem][index];\n        var newPrice = this.state.totalPrice;\n        var cSelectedItemsPrices = this.state.selectedItemsPrices;\n        var newBudget = this.state.budget\n\n        //calculate price here\n        var currentPicPrice = parseFloat(img.caption)\n        newPrice = (newPrice - cSelectedItemsPrices[currentItem] + currentPicPrice)\n        newBudget = (newBudget + cSelectedItemsPrices[currentItem] - currentPicPrice)\n\n        if (newBudget < 0) {\n            alert(\"Not enough balance!\");\n            return;\n        }\n\n        //select new image\n        img.isSelected = true;\n\n\n        if (sSelectedItems[currentItem] !== null)\n        {\n            if (sSelectedItems[currentItem] === index)\n            {\n                return;\n            }\n            var prevImg = displayedImages[currentItem][sSelectedItems[currentItem]];\n            //unselect prev image\n            prevImg.isSelected = false;\n        }\n\n        cSelectedItemsPrices[currentItem] = currentPicPrice\n        sSelectedItems[currentItem] = index\n        \n\n\n        this.setState({\n            displayedImages: displayedImages,\n            selectedItems: sSelectedItems,\n            totalPrice: newPrice,\n            selectedItemsPrices: cSelectedItemsPrices,\n            budget: newBudget,\n            isScroll: false,\n        });\n    }\n    \n    componentDidUpdate() {\n        //scroll div\n        if (this.state.isScroll === false)\n        {\n            return;\n        }\n        const objDiv = document.getElementById('gal');\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }\n      \n      \n\n    isNextItemEnabled() {\n        return (this.state.itemNumber < this.state.images.length-1) && (this.state.selectedItems[this.state.itemNumber] !== null)\n    }\n\n    handleFinishClick = () => {\n        //prepare data\n        //calculate finish date\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        var dateTime = date+' '+time;\n\n        //prepare choosen items\n        var allSelectedItems = this.state.selectedItems;\n        var allDisplyedItemImages = this.state.displyedItemImages;\n        var userChoices = [allDisplyedItemImages[0][allSelectedItems[0]], allDisplyedItemImages[1][allSelectedItems[1]],allDisplyedItemImages[2][allSelectedItems[2]]];\n        var userData = {\n            finishDate: dateTime, \n            userItems: userChoices, \n            spendTime: this.state.totalTime, \n            totalPrice: this.state.totalPrice,\n            budget: this.state.budget,\n            isRegular: this.state.isRegular,\n            clickedRegularViewMore: this.state.clickedRegularViewMore,\n            clickedVipViewMore: this.state.clickedVipViewMore,\n        }\n          this.props.history.push({\n              pathname: '/complete_purchase',\n              pData: userData\n          });\n      }\n\n    render() {\n        return (\n            <div className=\"selector-fonts\">\n                <h2 style={{margin: '0px', paddingTop: '3px', paddingLeft: '15%', paddingRight: '15%'}}>Choose an option you like most of all</h2>\n                <div className=\"selector-flex-content\">\n                        <div style={{\"display\": \"flex\", \"flexFlow\": \"column\", paddingRight: \"1%\", marginRight: \"10px\"}}>\n                        <button style= \n                        {\n                            { \n                                \"borderRadius\": \"50%\",\n                                \"background\": 'linear-gradient(to right, Green 0%, Green  51%, Green  100%)',\n                                \"color\": \"white\",\n                                \"padding\": \"24px\",\n                                \"textAlign\": \"center\",\n                                \"textDecoration\": \"none\",\n                                \"display\": \"inline-block\",\n                                \"fontSize\": \"14px\",\n                                \"margin\": \"4px 2px\",\n                                \"cursor\": \"pointer\",\n                                \"border\": \"2px solid #cfdcec\",\n                                \"maxWidth\": \"126px\",\n                            }\n                        } \n                                onClick={()=> this.handleRegularViewMoreClick()}>View additional option for 2 sec</button>\n                        { this.props.isRegular === false ? <button style= \n                        {\n                            { \n                                \"borderRadius\": \"50%\",\n                                \"background\": 'linear-gradient(to right, #F09819 0%, #EDDE5D  51%, #F09819  100%)',\n                                \"color\": \"#0f4c81\",\n                                \"padding\": \"20px\",\n                                \"textAlign\": \"center\",\n                                \"textDecoration\": \"none\",\n                                \"display\": \"inline-block\",\n                                \"fontSize\": \"14px\",\n                                \"margin\": \"4px 2px\",\n                                \"cursor\": \"pointer\",\n                                \"border\": \"2px solid #cfdcec\",\n                                \"maxWidth\": \"117px\",\n                            }\n                        } \n                        onClick={()=> this.handleVipViewMoreClick()}>View VIP option for 2 sec</button> : null}\n                    </div>\n                        <div id=\"gal\" className=\"gallery\">\n                            <Gallery\n                                tileViewportStyle={tileViewportStyleFn}\n                                thumbnailStyle={thumbnailStyleFn}\n                                enableLightbox={false}\n                                onClickThumbnail={(index) => this.onSelectImage(index, null)}\n                                images={this.state.displyedItemImages[this.state.itemNumber]}\n                                enableImageSelection={false}\n                                onSelectImage={(index, image) => this.onSelectImage(index, image)}\n                                margin={5}\n                            />                \n                        </div>\n                </div>\n                <div style={{flexFlow: 'column', backgroundColor: '#F7F7F7'}}>\n                        <label style={{\"color\": \"green\"}}>{\"Budget: \"+ this.state.budget.toFixed(2) + \" $\"}<br></br></label>\n                        <label style={{\"color\": \"red\"}}>{\"Total: \" + this.state.totalPrice.toFixed(2) + \" $\"} <br></br><br></br></label>   \n                        <div className=\"item_buttons\">\n                            <BottomNavigation style={ {backgroundColor: '#F7F7F7', justifyContent: 'space-between', width: '100%'} }\n                                \n                                onChange={(event, newValue) => {\n                                    if (newValue === 0) {\n                                        this.handlePrevClick();\n                                    }\n                                    else if (newValue === 1) {\n                                        this.handleFinishClick();\n                                    }\n                                    else {\n                                        this.handleNextClick();\n                                    }\n                                }}\n                                showLabels\n                                >\n                                <BottomNavigationAction disabled={this.state.itemNumber === 0} value={0} label=\"Previous item\" icon={<NavigateBeforeIcon />} />\n                                {this.isAllItemsSelected() ? <BottomNavigationAction value={1} label=\"Complete\" icon={<DoneOutlineIcon/>} /> : null } \n                                <BottomNavigationAction disabled={!this.isNextItemEnabled()} value={2} label=\"Next Item\" icon={<NavigateNextIcon />} />\n                            </BottomNavigation>\n                        </div>\n                </div>\n            </div>\n        );\n    }\n  }\n  \n  export default withRouter(SelectorRoom);","/Users/ilya/Dev/Development/React/tech-service/src/Story.js",[],"/Users/ilya/Dev/Development/React/tech-service/src/imagesStore.js",[],"/Users/ilya/Dev/Development/React/tech-service/src/Finish.js",[],"/Users/ilya/Dev/Development/React/tech-service/src/About.js",[],"/Users/ilya/Dev/Development/React/tech-service/src/circular_wait.js",["70","71","72"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { CircularProgress } from '@material-ui/core';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <CircularProgress></CircularProgress>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </div>\n  );\n}\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":20},{"ruleId":"79","severity":1,"message":"83","line":13,"column":29,"nodeType":"81","messageId":"82","endLine":13,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":18,"column":3,"nodeType":"86","messageId":"87","endLine":20,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":5,"column":1,"nodeType":"90","endLine":13,"endColumn":3},{"ruleId":"79","severity":1,"message":"91","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":30},{"ruleId":"79","severity":1,"message":"92","line":7,"column":5,"nodeType":"81","messageId":"82","endLine":7,"endColumn":17},{"ruleId":"79","severity":1,"message":"93","line":46,"column":9,"nodeType":"81","messageId":"82","endLine":46,"endColumn":18},{"ruleId":"79","severity":1,"message":"94","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":20},{"ruleId":"79","severity":1,"message":"95","line":15,"column":7,"nodeType":"81","messageId":"82","endLine":15,"endColumn":16},{"ruleId":"79","severity":1,"message":"96","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"97","line":20,"column":9,"nodeType":"81","messageId":"82","endLine":20,"endColumn":16},{"ruleId":"79","severity":1,"message":"98","line":27,"column":9,"nodeType":"81","messageId":"82","endLine":27,"endColumn":28},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CountdownCircleTimer' is defined but never used.","'numOfPersons' is assigned a value but never used.","'isRegular' is assigned a value but never used.","'CircProgress' is defined but never used.","'useStyles' is assigned a value but never used.","'DialogTitle' is defined but never used.","'classes' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]